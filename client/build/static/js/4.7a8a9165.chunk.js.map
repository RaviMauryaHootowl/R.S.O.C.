{"version":3,"sources":["components/Logo/Logo.jsx","mode/RSOCMode.js","components/Playground/RsocEditor.jsx","components/Playground/Playground.jsx","components/CodeEditor/CodeEditor.jsx","pages/Home/Home.jsx"],"names":["AppLogo","styled","div","LogoImage","img","Logo","src","RSOCLogo","CustomHighlightRules","$rules","token","regex","caseInsensitive","window","ace","acequire","TextHighlightRules","RSOCMode","HighlightRules","Mode","CustomAceEditor","AceEditor","RsocEditor","codeValue","setCodeValue","aceEditorRef","useRef","useEffect","rsocMode","current","console","log","editor","session","setMode","ref","mode","theme","editorProps","$blockScrolling","showPrintMargin","setOptions","fontFamily","fontSize","value","onChange","val","style","width","borderRadius","PlaygroundContainer","CodeWindow","OutputWindow","OutputValueWindow","OutputText","span","ErrorPopupContainer","ErrorIcon","BugReportIcon","CloseBtn","CancelRoundedIcon","ErrorMessage","ErrorPopup","errorMessage","setIsError","onClick","Playground","outputValue","isError","CodeEditorContainer","CodeEditorHeader","CodeRunBtn","button","CodeEditorPlayground","CodeEditor","useState","setOutputValue","setErrorMessage","runCode","a","data","axios","post","res","output","HomeContainer","Home"],"mappings":"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","file":"static/js/4.7a8a9165.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RSOCLogo from './logo.svg'\r\n\r\nconst AppLogo = styled.div`\r\n\tfont-size: 22px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 24px;\r\n`;\r\n\r\nconst LogoImage = styled.img`\r\n    height: 36px;\r\n    margin-right: 12px;\r\n`;\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <AppLogo>\r\n            <LogoImage src={RSOCLogo} />\r\n            R. S. O. C.\r\n        </AppLogo>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n","import 'brace/mode/text';\r\n\r\nexport class CustomHighlightRules extends window.ace.acequire(\"ace/mode/text_highlight_rules\").TextHighlightRules {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.$rules = {\r\n\t\t\t\"start\" : [\r\n                {\r\n                    token : \"comments\",\r\n                    regex : /^~.*$/\r\n                },\r\n                {\r\n                    token : \"tags\",\r\n                    regex : /:.*$/\r\n                },\r\n                {\r\n                    token : \"commands\",\r\n                    regex : /(?:SET|ADD|SUB|MUL|DIV|INR|DCR|SHOW|IFG|IFL|IFE|IFN|JUMP|SKIP)\\b/,\r\n                    caseInsensitive: true\r\n                },\r\n                {\r\n                    token : \"numbers\",\r\n                    regex : /[0-9]+\\b/,\r\n                }\r\n            ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default class RSOCMode extends window.ace.acequire('ace/mode/text').Mode {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.HighlightRules = CustomHighlightRules;\r\n\t}\r\n}","import React,{useEffect, useRef} from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport styled from \"styled-components\";\r\nimport RSOCMode from \"../../mode/RSOCMode\";\r\n\r\nconst CustomAceEditor = styled(AceEditor)`\r\n    &::-webkit-scrollbar-thumb {\r\n    background: #df4545;\r\n    }\r\n`;\r\n\r\nconst RsocEditor = ({ codeValue, setCodeValue }) => {\r\n\r\nconst aceEditorRef = useRef(null);\r\n\r\nuseEffect(() => {\r\n    const rsocMode = new RSOCMode();\r\n    if(aceEditorRef.current != null){\r\n        console.log(aceEditorRef);\r\n        aceEditorRef.current.editor.session.setMode(rsocMode);\r\n    }\r\n}, [aceEditorRef.current])\r\n\r\nreturn (\r\n    <CustomAceEditor\r\n        ref={aceEditorRef}\r\n        mode=\"text\"\r\n        theme=\"monokai\"\r\n        editorProps={{ $blockScrolling: true }}\r\n        showPrintMargin={false}\r\n        setOptions={{\r\n            fontFamily: \"Cascadia Code\"\r\n        }}\r\n        fontSize={26}\r\n        value={codeValue}\r\n        onChange={(val) => {\r\n            setCodeValue(val);\r\n        }}\r\n        style={{\r\n            width: '100%',\r\n            borderRadius: '8px',\r\n        }}\r\n    />\r\n);\r\n}\r\n\r\nexport default RsocEditor;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RsocEditor from \"./RsocEditor\";\r\nimport BugReportIcon from '@mui/icons-material/BugReport';\r\nimport CancelRoundedIcon from '@mui/icons-material/CancelRounded';\r\n\r\nconst PlaygroundContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 8px;\r\n    padding: 8px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: stretch;\r\n`;\r\n\r\nconst CodeWindow = styled.div`\r\n    flex: 3;\r\n    padding-right: 1rem;\r\n`;\r\n\r\nconst OutputWindow = styled.div`\r\n    background-color: #2c2c2c;\r\n    border-radius: 8px;\r\n    flex: 2;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 12px;\r\n    \r\n`;\r\n\r\nconst OutputValueWindow = styled.div`\r\n    flex: 1;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        background: #2e2e2e;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: #575757;\r\n        border-radius: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb:hover {\r\n        background: #787878;\r\n    }\r\n`;\r\n\r\nconst OutputText = styled.span`\r\n    color: white;\r\n    font-size: 2rem;\r\n    white-space: pre-wrap;\r\n    font-family: 'Cascadia Code', sans-serif;\r\n`;\r\n\r\nconst Playground = ({codeValue, setCodeValue, outputValue, isError, setIsError, errorMessage}) => {\r\n    return (\r\n        <PlaygroundContainer>\r\n            <CodeWindow>\r\n                <RsocEditor codeValue={codeValue} setCodeValue={setCodeValue}/>\r\n            </CodeWindow>\r\n            <OutputWindow>\r\n                <OutputValueWindow>\r\n                    <OutputText>{`${outputValue}`}</OutputText>\r\n                </OutputValueWindow>\r\n                {(isError) && <ErrorPopup setIsError={setIsError} errorMessage={errorMessage}/>}\r\n            </OutputWindow>\r\n        </PlaygroundContainer>\r\n    );\r\n}\r\n\r\nconst ErrorPopupContainer = styled.div`\r\n    width: 100%;\r\n    background: #474747;\r\n    padding: 12px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    border-radius: 8px;\r\n    margin-top: 8px;\r\n`;\r\n\r\nconst ErrorIcon = styled(BugReportIcon)`\r\n    color: #ee5847;\r\n    margin-right: 8px;\r\n`;\r\n\r\nconst CloseBtn = styled(CancelRoundedIcon)`\r\n    color: #8b8b8b;\r\n    margin-left: 8px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: white;\r\n    flex: 1;\r\n`;\r\n\r\nconst ErrorPopup = ({errorMessage, setIsError}) => {\r\n    return (\r\n        <ErrorPopupContainer>\r\n            <ErrorIcon fontSize=\"large\"/>\r\n            <ErrorMessage>{errorMessage}</ErrorMessage>\r\n            <CloseBtn onClick={() => { setIsError(false); }}/>\r\n        </ErrorPopupContainer>\r\n    );\r\n}\r\n\r\nexport default Playground;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport Logo from '../Logo/Logo';\r\nimport PlayArrowRoundedIcon from '@mui/icons-material/PlayArrowRounded';\r\nimport Playground from '../Playground/Playground';\r\nimport axios from 'axios';\r\n\r\nconst CodeEditorContainer = styled.div`\r\n\tbackground-color: #252525;\r\n    border-radius: 20px;\r\n    width: 100%;\r\n    height: 100%;\r\n    box-shadow: rgba(26, 26, 26, 0.596) 4px 4px 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst CodeEditorHeader = styled.div`\r\n\twidth: 100%;\r\n    height: 70px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: stretch;\r\n    justify-content: space-between;\r\n    color: white;\r\n\tfont-family: 'Readex Pro', sans-serif;\r\n`;\r\n\r\nconst CodeRunBtn = styled.button`\r\n\tbackground-color: transparent;\r\n\tcolor: white;\r\n\toutline: none;\r\n\tborder: none;\r\n\tfont-size: 22px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 24px;\r\n    border-radius: 0 20px 0 0;\r\n    cursor: pointer;\r\n\t&:hover{\r\n\t\tbackground-color: rgb(73, 73, 73);\r\n\t}\r\n`;\r\n\r\nconst CodeEditorPlayground = styled.div`\r\n\twidth: 100%;\r\n    flex: 1;\r\n\toverflow-y: hidden;\r\n\tpadding: 12px;\r\n`;\r\n\r\nconst APIURL = 'api/run';\r\n\r\nconst CodeEditor = () => {\r\n\r\n\tconst [codeValue, setCodeValue] = useState(\"\");\r\n\tconst [outputValue, setOutputValue] = useState(\"\");\r\n\tconst [isError, setIsError] = useState(false);\r\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(codeValue);\r\n\t}, [codeValue]);\r\n\r\n\tconst runCode = async () => {\r\n\t\tconst data = {\r\n\t\t\t\"code\": codeValue\r\n\t\t}\r\n\t\tconst res = await axios.post(APIURL, data);\r\n\t\tconst output = res.data;\r\n\t\tconsole.log(output);\r\n\t\tif(output['status'] == 'done'){\r\n\t\t\tsetOutputValue(output['output']);\r\n\t\t\tsetIsError(false);\r\n\t\t\tsetErrorMessage(\"\");\r\n\t\t}else{\r\n\t\t\tsetOutputValue(\"Oops!\");\r\n\t\t\tsetIsError(true);\r\n\t\t\tsetErrorMessage(`Error: ${output['message']}`);\r\n\t\t}\r\n\t}\r\n\r\n    return (\r\n        <CodeEditorContainer>\r\n\t\t\t<CodeEditorHeader>\r\n\t\t\t\t<Logo />\r\n\t\t\t\t<CodeRunBtn onClick={() => {runCode();}}>\r\n\t\t\t\t\t<PlayArrowRoundedIcon />\r\n\t\t\t\t\tRun\r\n\t\t\t\t</CodeRunBtn>\r\n\t\t\t</CodeEditorHeader>\r\n\t\t\t<CodeEditorPlayground>\r\n\t\t\t\t<Playground codeValue={codeValue} setCodeValue={setCodeValue} outputValue={outputValue} isError={isError} errorMessage={errorMessage} setIsError={setIsError} />\r\n\t\t\t</CodeEditorPlayground>\r\n        </CodeEditorContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default CodeEditor;","import react from 'react';\r\nimport CodeEditor from '../../components/CodeEditor/CodeEditor';\r\nimport styled from 'styled-components';\r\n\r\nconst HomeContainer = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: #d8d8d8;\r\n    padding: 20px;\r\n`; \r\n\r\nconst Home = () => {\r\n    return (\r\n        <HomeContainer>\r\n            <CodeEditor />\r\n        </HomeContainer>\r\n    );\r\n}\r\n\r\nexport default Home;"],"sourceRoot":""}