{"version":3,"sources":["components/Logo/Logo.jsx","mode/RSOCMode.js","components/Playground/RsocEditor.jsx","components/Playground/Playground.jsx","components/CodeEditor/CodeEditor.jsx","components/Tutorial/Tutorial.jsx","pages/Home/Home.jsx"],"names":["AppLogo","styled","div","LogoImage","img","Logo","src","RSOCLogo","CustomHighlightRules","$rules","token","regex","caseInsensitive","window","ace","acequire","TextHighlightRules","RSOCMode","HighlightRules","Mode","CustomAceEditor","AceEditor","RsocEditor","codeValue","setCodeValue","aceEditorRef","useRef","useEffect","rsocMode","current","console","log","editor","session","setMode","useState","x","innerWidth","y","innerHeight","size","setSize","updateSize","onresize","ref","mode","theme","editorProps","$blockScrolling","showPrintMargin","placeholder","setOptions","fontFamily","fontSize","value","height","onChange","val","toUpperCase","style","width","borderRadius","PlaygroundContainer","CodeWindow","OutputWindow","OutputValueWindow","OutputText","span","ErrorPopupContainer","ErrorIcon","BugReportIcon","CloseBtn","CancelRoundedIcon","ErrorMessage","ErrorPopup","errorMessage","setIsError","onClick","Playground","outputValue","isError","CodeEditorContainer","CodeEditorHeader","LogoContainer","TutorialBtn","button","TutorialBtnText","CodeRunBtn","CodeRunBtnText","CodeEditorPlayground","RunIcon","PlayArrowRoundedIcon","TutorialIcon","BookmarkAddRoundedIcon","CodeEditor","setIsTutOpen","setOutputValue","setErrorMessage","runCode","a","data","axios","post","res","output","TutorialContainer","HeaderRow","HeaderText","SubHeaderText","FormattedText","VerticalSpace","CodeBlockContainer","CodeBlockDisplay","InstructionSet","title","code","CodeBlock","children","Tutorial","HomeContainer","TutorialSidePanel","animated","Home","isTutOpen","transition","useTransition","from","opacity","enter","leave","item"],"mappings":"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","file":"static/js/4.8fcd7d36.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RSOCLogo from './logo.svg'\r\n\r\nconst AppLogo = styled.div`\r\n\tfont-size: 22px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 24px;\r\n    @media(max-width: 600px){\r\n\t\tfont-size: 16px;\r\n\t}\r\n`;\r\n\r\nconst LogoImage = styled.img`\r\n    height: 36px;\r\n    margin-right: 12px;\r\n    @media(max-width: 600px){\r\n\t\theight: 28px;\r\n        margin-right: 10px;\r\n\t}\r\n`;\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <AppLogo>\r\n            <LogoImage src={RSOCLogo} />\r\n            R. S. O. C.\r\n        </AppLogo>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n","import 'brace/mode/text';\r\n\r\nexport class CustomHighlightRules extends window.ace.acequire(\"ace/mode/text_highlight_rules\").TextHighlightRules {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.$rules = {\r\n\t\t\t\"start\" : [\r\n                {\r\n                    token : \"comments\",\r\n                    regex : /^~.*$/\r\n                },\r\n                {\r\n                    token : \"tags\",\r\n                    regex : /:.*$/\r\n                },\r\n                {\r\n                    token : \"commands\",\r\n                    regex : /(?:SET|ADD|SUB|MUL|DIV|INR|DCR|SHOW|IFG|IFL|IFE|IFN|JUMP|SKIP)\\b/,\r\n                    caseInsensitive: true\r\n                },\r\n                {\r\n                    token : \"numbers\",\r\n                    regex : /[0-9]+\\b/,\r\n                }\r\n            ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default class RSOCMode extends window.ace.acequire('ace/mode/text').Mode {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.HighlightRules = CustomHighlightRules;\r\n\t}\r\n}","import React,{useState, useEffect, useRef} from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport styled from \"styled-components\";\r\nimport RSOCMode from \"../../mode/RSOCMode\";\r\n\r\nconst CustomAceEditor = styled(AceEditor)`\r\n    width: 100%;\r\n`;\r\n\r\nconst RsocEditor = ({ codeValue, setCodeValue }) => {\r\n\r\n    const aceEditorRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const rsocMode = new RSOCMode();\r\n        if(aceEditorRef.current != null){\r\n            console.log(aceEditorRef);\r\n            aceEditorRef.current.editor.session.setMode(rsocMode);\r\n        }\r\n    }, [aceEditorRef.current])\r\n\r\n    const [size, setSize] = useState({\r\n        x: window.innerWidth,\r\n        y: window.innerHeight\r\n    });\r\n    const updateSize = () =>\r\n        setSize({\r\n            x: window.innerWidth,\r\n            y: window.innerHeight\r\n        });\r\n    useEffect(() => (window.onresize = updateSize), []);\r\n\r\n    return (\r\n        <CustomAceEditor\r\n            ref={aceEditorRef}\r\n            mode=\"text\"\r\n            theme=\"monokai\"\r\n            editorProps={{ $blockScrolling: true }}\r\n            showPrintMargin={false}\r\n            placeholder=\"Type your code here\"\r\n            setOptions={{\r\n                fontFamily: \"monospace\"\r\n            }}\r\n            fontSize={(size.x != null && size.x < 600) ? 20 : 25}\r\n            value={codeValue}\r\n            height=\"100%\"\r\n            onChange={(val) => {\r\n                setCodeValue(val.toUpperCase());\r\n            }}\r\n            style={{\r\n                width: '100%',\r\n                borderRadius: '8px',\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default RsocEditor;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RsocEditor from \"./RsocEditor\";\r\nimport BugReportIcon from '@mui/icons-material/BugReport';\r\nimport CancelRoundedIcon from '@mui/icons-material/CancelRounded';\r\n\r\nconst PlaygroundContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 8px;\r\n    padding: 8px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: stretch;\r\n    @media(max-width: 600px){\r\n        flex-direction: column;\r\n\t}\r\n`;\r\n\r\nconst CodeWindow = styled.div`\r\n    flex: 3;\r\n    padding-right: 1rem;\r\n    @media(max-width: 600px){\r\n        padding-right: 0;\r\n        flex: 3;\r\n        padding-bottom: 1rem;\r\n\t}\r\n`;\r\n\r\nconst OutputWindow = styled.div`\r\n    background-color: #2c2c2c;\r\n    border-radius: 8px;\r\n    flex: 2;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 12px;\r\n    overflow: auto;\r\n    @media(max-width: 600px){\r\n        flex: 2;\r\n\t}\r\n`;\r\n\r\nconst OutputValueWindow = styled.div`\r\n    flex: 1;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        background: #2e2e2e;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: #575757;\r\n        border-radius: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb:hover {\r\n        background: #787878;\r\n    }\r\n`;\r\n\r\nconst OutputText = styled.span`\r\n    color: white;\r\n    font-size: 2rem;\r\n    white-space: pre-wrap;\r\n    font-family: monospace;\r\n    @media(max-width: 600px){\r\n        font-size: 1.2rem;\r\n\t}\r\n`;\r\n\r\nconst Playground = ({codeValue, setCodeValue, outputValue, isError, setIsError, errorMessage}) => {\r\n    return (\r\n        <PlaygroundContainer>\r\n            <CodeWindow>\r\n                <RsocEditor codeValue={codeValue} setCodeValue={setCodeValue}/>\r\n            </CodeWindow>\r\n            <OutputWindow>\r\n                <OutputValueWindow>\r\n                    <OutputText>{`${outputValue}`}</OutputText>\r\n                </OutputValueWindow>\r\n                {(isError) && <ErrorPopup setIsError={setIsError} errorMessage={errorMessage}/>}\r\n            </OutputWindow>\r\n        </PlaygroundContainer>\r\n    );\r\n}\r\n\r\nconst ErrorPopupContainer = styled.div`\r\n    width: 100%;\r\n    background: #474747;\r\n    padding: 12px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    border-radius: 8px;\r\n    margin-top: 8px;\r\n`;\r\n\r\nconst ErrorIcon = styled(BugReportIcon)`\r\n    color: #ee5847;\r\n    margin-right: 8px;\r\n`;\r\n\r\nconst CloseBtn = styled(CancelRoundedIcon)`\r\n    color: #8b8b8b;\r\n    margin-left: 8px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: white;\r\n    flex: 1;\r\n`;\r\n\r\nconst ErrorPopup = ({errorMessage, setIsError}) => {\r\n    return (\r\n        <ErrorPopupContainer>\r\n            <ErrorIcon fontSize=\"large\"/>\r\n            <ErrorMessage>{errorMessage}</ErrorMessage>\r\n            <CloseBtn onClick={() => { setIsError(false); }}/>\r\n        </ErrorPopupContainer>\r\n    );\r\n}\r\n\r\nexport default Playground;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport Logo from '../Logo/Logo';\r\nimport PlayArrowRoundedIcon from '@mui/icons-material/PlayArrowRounded';\r\nimport BookmarkAddRoundedIcon from '@mui/icons-material/BookmarkAddRounded';\r\nimport Playground from '../Playground/Playground';\r\nimport axios from 'axios';\r\n\r\nconst CodeEditorContainer = styled.div`\r\n\tbackground-color: #252525;\r\n    border-radius: 20px;\r\n    width: 100%;\r\n    height: 100%;\r\n    box-shadow: rgba(26, 26, 26, 0.596) 4px 4px 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst CodeEditorHeader = styled.div`\r\n\twidth: 100%;\r\n    height: 70px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: stretch;\r\n    color: white;\r\n\tfont-family: 'Readex Pro', sans-serif;\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n\tflex: 1;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n`;\r\n\r\nconst TutorialBtn = styled.button`\r\n\tbackground-color: transparent;\r\n\tcolor: white;\r\n\toutline: none;\r\n\tborder: none;\r\n\tfont-size: 22px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 24px;\r\n    cursor: pointer;\r\n\t&:hover{\r\n\t\tbackground-color: rgb(73, 73, 73);\r\n\t}\r\n\t@media(max-width: 600px){\r\n\t\tpadding: 0 12px;\r\n\t}\r\n\t\r\n`;\r\n\r\nconst TutorialBtnText = styled.span`\r\n\t@media(max-width: 600px){\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nconst CodeRunBtn = styled.button`\r\n\tbackground-color: transparent;\r\n\tcolor: white;\r\n\toutline: none;\r\n\tborder: none;\r\n\tfont-size: 22px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 24px;\r\n    border-radius: 0 20px 0 0;\r\n    cursor: pointer;\r\n\t&:hover{\r\n\t\tbackground-color: rgb(73, 73, 73);\r\n\t}\r\n\t@media(max-width: 600px){\r\n\t\tpadding: 0 12px;\r\n\t}\r\n`;\r\n\r\nconst CodeRunBtnText = styled.span`\r\n\t@media(max-width: 600px){\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nconst CodeEditorPlayground = styled.div`\r\n\twidth: 100%;\r\n    flex: 1;\r\n\toverflow-y: hidden;\r\n\tpadding: 12px;\r\n`;\r\n\r\n\r\nconst RunIcon = styled(PlayArrowRoundedIcon)`\r\n\tmargin-right: 10px;\t\r\n`;\r\nconst TutorialIcon = styled(BookmarkAddRoundedIcon)`\r\n\tmargin-right: 10px;\r\n`;\r\n\r\nconst APIURL = 'api/run';\r\n\r\nconst CodeEditor = ({setIsTutOpen}) => {\r\n\r\n\tconst [codeValue, setCodeValue] = useState(\"\");\r\n\tconst [outputValue, setOutputValue] = useState(\"\");\r\n\tconst [isError, setIsError] = useState(false);\r\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(codeValue);\r\n\t}, [codeValue]);\r\n\r\n\tconst runCode = async () => {\r\n\t\tconst data = {\r\n\t\t\t\"code\": codeValue\r\n\t\t}\r\n\t\tconst res = await axios.post(APIURL, data);\r\n\t\tconst output = res.data;\r\n\t\tconsole.log(output);\r\n\t\tif(output['status'] == 'done'){\r\n\t\t\tsetOutputValue(output['output']);\r\n\t\t\tsetIsError(false);\r\n\t\t\tsetErrorMessage(\"\");\r\n\t\t}else{\r\n\t\t\tsetOutputValue(\"Oops!\");\r\n\t\t\tsetIsError(true);\r\n\t\t\tsetErrorMessage(`Error: ${output['message']}`);\r\n\t\t}\r\n\t}\r\n\r\n    return (\r\n        <CodeEditorContainer>\r\n\t\t\t<CodeEditorHeader>\r\n\t\t\t\t<LogoContainer>\r\n\t\t\t\t\t<Logo />\r\n\t\t\t\t</LogoContainer>\r\n\t\t\t\t<TutorialBtn onClick={() => {setIsTutOpen(true);}}>\r\n\t\t\t\t\t<TutorialIcon />\r\n\t\t\t\t\t<TutorialBtnText>Tutorial</TutorialBtnText>\r\n\t\t\t\t</TutorialBtn>\r\n\t\t\t\t<CodeRunBtn onClick={() => {runCode();}}>\r\n\t\t\t\t\t<RunIcon />\r\n\t\t\t\t\t<CodeRunBtnText>Run</CodeRunBtnText>\r\n\t\t\t\t</CodeRunBtn>\r\n\t\t\t</CodeEditorHeader>\r\n\t\t\t<CodeEditorPlayground>\r\n\t\t\t\t<Playground codeValue={codeValue} setCodeValue={setCodeValue} outputValue={outputValue} isError={isError} errorMessage={errorMessage} setIsError={setIsError} />\r\n\t\t\t</CodeEditorPlayground>\r\n        </CodeEditorContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default CodeEditor;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst TutorialContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 12px;\r\n    font-family: 'Readex Pro', sans-serif;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst HeaderRow = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    color: white;\r\n`;\r\n\r\nconst HeaderText = styled.div`\r\n    font-size: 2rem;\r\n    color: white;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst SubHeaderText = styled.div`\r\n    font-size: 1.6rem;\r\n    color: #ffbc51;\r\n    margin-bottom: 6px;\r\n`;\r\n\r\nconst FormattedText = styled.div`\r\n    font-size: 1.1rem;\r\n    color: white;\r\n`;\r\n\r\nconst VerticalSpace = styled.div`\r\n    height: 16px;\r\n`;\r\n\r\nconst CodeBlockContainer = styled.div`\r\n    width: 100%;\r\n    margin: 6px 0;\r\n    \r\n`;\r\n\r\nconst CodeBlockDisplay = styled.div`\r\n    background-color: #111111;\r\n    color: #bcffc1;\r\n    padding: 6px;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst Tutorial = ({setIsTutOpen}) => {\r\n    return (\r\n        <TutorialContainer>\r\n            <HeaderRow>\r\n                <HeaderText>R.S.O.C. Tutorial</HeaderText>\r\n                <CloseBtn onClick={() => {setIsTutOpen(false);}}>\r\n                    <CloseIcon/>\r\n                </CloseBtn>\r\n            </HeaderRow>\r\n            <SubHeaderText>Architecture</SubHeaderText>\r\n            <FormattedText>\r\n            <li>R.S.O.C. comes with a memory size of 65536 locations and 7 Registers(A-G)</li>\r\n            <li>Memory is represented within M() Eg. M(2000H)</li>\r\n            <li>This denotes memory location with hex index of 2000</li>\r\n            <li>Registers are represented by their letter which ranges from A to G</li>\r\n            </FormattedText>\r\n            <VerticalSpace/>\r\n            <SubHeaderText>Instruction Set</SubHeaderText>\r\n            <InstructionSet \r\n                title={\r\n                    <>1. SET : Used to set a memory or register from another memory, register or data.</>\r\n                }\r\n                code={\r\n                    <>\r\n                    SET A, B<br/>\r\n                    SET A, 20<br/>\r\n                    SET M(2001H), 40<br/>\r\n                    </>\r\n                }\r\n            />\r\n            <InstructionSet \r\n                title={\r\n                    <>2. SHOW: Used to print the value of a memory or register.</>\r\n                }\r\n                code={\r\n                    <>\r\n                    SHOW A<br/>\r\n                    SHOW M(2000H)\r\n                    </>\r\n                }\r\n            />\r\n            <InstructionSet \r\n                title={\r\n                    <>3. SKIP: Empty and Useless line just like your life (jk)</>\r\n                }\r\n                code={\r\n                    <>\r\n                    SKIP\r\n                    </>\r\n                }\r\n            />\r\n            <InstructionSet \r\n                title={\r\n                    <>4. ADD, SUB, MUL, DIV: Performs arithmetics on two numbers and stores into A Register (Accumulator)</>\r\n                }\r\n                code={\r\n                    <>\r\n                    ADD A, B<br/>\r\n                    ADD C, M(2000H)<br/>\r\n                    ADD 30, 40<br/>\r\n                    SUB A, B<br/>\r\n                    MUL B, C<br/>\r\n                    DIV C, D\r\n                    </>\r\n                }\r\n            />\r\n            <InstructionSet \r\n                title={\r\n                    <>5. INR/DCR: Used to Increment or Decrement value</>\r\n                }\r\n                code={\r\n                    <>\r\n                    INR A<br/>\r\n                    DCR M(1000H)\r\n                    </>\r\n                }\r\n            />\r\n            <InstructionSet \r\n                title={\r\n                    <>6. IFG: If greater conditional jump to a label.<br/>\r\n                    Eg. Here since A is greater than 10 it jumps to jumptag label<br/>\r\n                    Similarly, IFL: If Less, IFE: If Equal, IFN: If Not Equal</>\r\n                }\r\n                code={\r\n                    <>\r\n                    SET A, 20<br/>\r\n                    IFG A, 10, jumptag<br/>\r\n                    ...<br/>\r\n                    ...<br/>\r\n                    SHOW A : jumptag<br/>\r\n                    </>\r\n                }\r\n            />\r\n            <InstructionSet \r\n                title={\r\n                    <>7. Comments: These are represented by ~ (tilde) symbol which is also the logo of R.S.O.C.</>\r\n                }\r\n                code={\r\n                    <>\r\n                    SET A, 20<br/>\r\n                    ~ This is a comment line<br/>\r\n                    SHOW A\r\n                    </>\r\n                }\r\n            />\r\n            \r\n        </TutorialContainer>\r\n    );\r\n}\r\n\r\nconst InstructionSet = ({title, code}) => {\r\n    return (\r\n        <>\r\n            <FormattedText>\r\n                {title}\r\n            </FormattedText>\r\n            <CodeBlock>\r\n                {code}\r\n            </CodeBlock>\r\n            <VerticalSpace/>\r\n        </>\r\n    );\r\n}\r\n\r\nconst CodeBlock = ({children}) => {\r\n    return (\r\n        <CodeBlockContainer>\r\n            <CodeBlockDisplay>{children}</CodeBlockDisplay>\r\n        </CodeBlockContainer>\r\n    );\r\n}\r\n\r\nexport default Tutorial;","import React, {useState} from 'react';\r\nimport CodeEditor from '../../components/CodeEditor/CodeEditor';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport Tutorial from '../../components/Tutorial/Tutorial';\r\nimport { useTransition, animated } from 'react-spring';\r\n\r\nconst HomeContainer = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: #d8d8d8;\r\n    padding: 20px;\r\n    position: relative;\r\n`; \r\n\r\nconst TutorialSidePanel = styled(animated.div)`\r\n    z-index: 10;\r\n    background-color: #313131;\r\n    position: absolute;\r\n    width: 40%;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    box-shadow: #35353540 -2px 0px 20px;\r\n    border-left: 6px solid #5c5c5c;\r\n    @media(max-width: 600px){\r\n        width: 80%;\r\n\t}\r\n    @media(max-width: 500px){\r\n        width: 90%;\r\n\t}\r\n`;\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [isTutOpen, setIsTutOpen] = useState(false);\r\n    const transition = useTransition(isTutOpen, {\r\n        from: {\r\n            x: 250,\r\n            y: 0,\r\n            opacity: 0\r\n        },\r\n        enter: {\r\n            x: 0,\r\n            y: 0,\r\n            opacity: 1\r\n        },\r\n        leave: {\r\n            x: 250,\r\n            y: 0,\r\n            opacity: 0\r\n        },\r\n    });\r\n\r\n    return (\r\n        <HomeContainer>\r\n            <CodeEditor setIsTutOpen={setIsTutOpen}/>\r\n            {transition((style, item) => \r\n                item && <TutorialSidePanel style={style}>\r\n                    <Tutorial setIsTutOpen={setIsTutOpen}/>\r\n                </TutorialSidePanel> \r\n            )}\r\n        </HomeContainer>\r\n    );\r\n}\r\n\r\nexport default Home;"],"sourceRoot":""}